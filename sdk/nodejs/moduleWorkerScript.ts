// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ModuleWorkerScript extends pulumi.CustomResource {
    /**
     * Get an existing ModuleWorkerScript resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ModuleWorkerScript {
        return new ModuleWorkerScript(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cr:index:ModuleWorkerScript';

    /**
     * Returns true if the given object is an instance of ModuleWorkerScript.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ModuleWorkerScript {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ModuleWorkerScript.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public readonly analyticsEngineBindings!: pulumi.Output<outputs.AnalyticsEngineBinding[] | undefined>;
    public readonly compatibilityDate!: pulumi.Output<string | undefined>;
    public readonly compatibilityFlags!: pulumi.Output<string[] | undefined>;
    public readonly d1DatabaseBindings!: pulumi.Output<outputs.D1DatabaseBinding[] | undefined>;
    public readonly dir!: pulumi.Output<string>;
    public /*out*/ readonly eTag!: pulumi.Output<string>;
    public readonly kvNamespaceBindings!: pulumi.Output<outputs.KVNamespaceBinding[] | undefined>;
    public readonly logpush!: pulumi.Output<boolean | undefined>;
    public readonly mainModule!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly plainTextBindings!: pulumi.Output<outputs.PlainTextBinding[] | undefined>;
    public readonly queueBindings!: pulumi.Output<outputs.QueueBinding[] | undefined>;
    public readonly r2BucketBindings!: pulumi.Output<outputs.R2BucketBinding[] | undefined>;
    public readonly secretTextBindings!: pulumi.Output<outputs.SecretTextBinding[] | undefined>;
    public readonly serviceBindings!: pulumi.Output<outputs.ServiceBinding[] | undefined>;

    /**
     * Create a ModuleWorkerScript resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModuleWorkerScriptArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.dir === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dir'");
            }
            if ((!args || args.mainModule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mainModule'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["analyticsEngineBindings"] = args ? args.analyticsEngineBindings : undefined;
            resourceInputs["compatibilityDate"] = args ? args.compatibilityDate : undefined;
            resourceInputs["compatibilityFlags"] = args ? args.compatibilityFlags : undefined;
            resourceInputs["d1DatabaseBindings"] = args ? args.d1DatabaseBindings : undefined;
            resourceInputs["dir"] = args ? args.dir : undefined;
            resourceInputs["kvNamespaceBindings"] = args ? args.kvNamespaceBindings : undefined;
            resourceInputs["logpush"] = args ? args.logpush : undefined;
            resourceInputs["mainModule"] = args ? args.mainModule : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["plainTextBindings"] = args ? args.plainTextBindings : undefined;
            resourceInputs["queueBindings"] = args ? args.queueBindings : undefined;
            resourceInputs["r2BucketBindings"] = args ? args.r2BucketBindings : undefined;
            resourceInputs["secretTextBindings"] = args ? args.secretTextBindings : undefined;
            resourceInputs["serviceBindings"] = args ? args.serviceBindings : undefined;
            resourceInputs["eTag"] = undefined /*out*/;
        } else {
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["analyticsEngineBindings"] = undefined /*out*/;
            resourceInputs["compatibilityDate"] = undefined /*out*/;
            resourceInputs["compatibilityFlags"] = undefined /*out*/;
            resourceInputs["d1DatabaseBindings"] = undefined /*out*/;
            resourceInputs["dir"] = undefined /*out*/;
            resourceInputs["eTag"] = undefined /*out*/;
            resourceInputs["kvNamespaceBindings"] = undefined /*out*/;
            resourceInputs["logpush"] = undefined /*out*/;
            resourceInputs["mainModule"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["plainTextBindings"] = undefined /*out*/;
            resourceInputs["queueBindings"] = undefined /*out*/;
            resourceInputs["r2BucketBindings"] = undefined /*out*/;
            resourceInputs["secretTextBindings"] = undefined /*out*/;
            resourceInputs["serviceBindings"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ModuleWorkerScript.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ModuleWorkerScript resource.
 */
export interface ModuleWorkerScriptArgs {
    accountId: pulumi.Input<string>;
    analyticsEngineBindings?: pulumi.Input<pulumi.Input<inputs.AnalyticsEngineBindingArgs>[]>;
    compatibilityDate?: pulumi.Input<string>;
    compatibilityFlags?: pulumi.Input<pulumi.Input<string>[]>;
    d1DatabaseBindings?: pulumi.Input<pulumi.Input<inputs.D1DatabaseBindingArgs>[]>;
    dir: pulumi.Input<string>;
    kvNamespaceBindings?: pulumi.Input<pulumi.Input<inputs.KVNamespaceBindingArgs>[]>;
    logpush?: pulumi.Input<boolean>;
    mainModule: pulumi.Input<string>;
    name: pulumi.Input<string>;
    plainTextBindings?: pulumi.Input<pulumi.Input<inputs.PlainTextBindingArgs>[]>;
    queueBindings?: pulumi.Input<pulumi.Input<inputs.QueueBindingArgs>[]>;
    r2BucketBindings?: pulumi.Input<pulumi.Input<inputs.R2BucketBindingArgs>[]>;
    secretTextBindings?: pulumi.Input<pulumi.Input<inputs.SecretTextBindingArgs>[]>;
    serviceBindings?: pulumi.Input<pulumi.Input<inputs.ServiceBindingArgs>[]>;
}
